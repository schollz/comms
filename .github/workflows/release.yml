name: Make release

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install alsa/asoundlib.h
      run: |
        sudo apt update
        sudo apt install -y libasound2-dev

    - name: Build files
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags '-X "main.Version=${{ github.event.release.name }}"' -o comms_linux_amd64
        ./comms_linux_amd64 --version

    - name: Create checksums.txt
      run: |
        sha256sum comms_linux_amd64 > comms_${{ github.event.release.name }}_checksums.txt

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          comms_${{ github.event.release.name }}_checksums.txt
          comms_linux_amd64

  build_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true

    - name: Install required packages
      shell: msys2 {0}
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-rtmidi mingw-w64-x86_64-toolchain

    - name: Set up environment variables for Go
      run: |
        $env:Path += ";C:\\msys64\\mingw64\\bin"
        $env:CGO_ENABLED = "1"
        $env:CC = "x86_64-w64-mingw32-gcc"
        $env:CGO_LDFLAGS = "-static"

    - name: Build Go project
      run: |
        go build -ldflags '-X "main.Version=${{ github.event.release.name }}"' -o comms.exe
        ./comms.exe --version

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          comms.exe
